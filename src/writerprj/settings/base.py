"""
Django settings for writerprj project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@oxcdl8+-3s$#pdzz8a$vb=mvr)yq$n%)_)ny+*wqc8-3lx2lu'

# Do something like this instead:
#from .key import get_key           # DON'T GIT THE key.py FILE!
#SECRET_KEY = get_key().secret_key  # write a simple fn to return a const like the one above

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# From blog at:  https://www.codingforentrepreneurs.com/blog/configure-email-in-django/
EMAIL_HOST = 'smtp.gmail.com'  # 'smtp.gmail.com' for gmail
EMAIL_HOST_USER = 'yourusername@youremail.com'
EMAIL_HOST_PASSWORD = 'your password'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'Your Name <you@email.com>'

ADMINS = (
    ('You', 'you@email.com'),
)
MANAGERS = ADMINS

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'csp',
    'writerhome',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
]

# Keep our policy as strict as possible
if DEBUG:
    # CSP_SCRIPT_SRC = ("'self'", 'https://code.jquery.com', 'cdnjs.cloudflare.com', 'maxcdn.bootstrapcdn.com')
    CSP_SCRIPT_SRC = ("'self'", 'http://localhost', 'ajax.googleapis.com', 'cdnjs.cloudflare.com', "'unsafe-inline'", "'unsafe-eval'")
    CSP_STYLE_SRC = ("'self'", 'code.jquery.com', 'cdnjs.cloudflare.com', 'maxcdn.bootstrapcdn.com', "'unsafe-inline'")
    CSP_FONT_SRC = ("'self'", 'cdnjs.cloudflare.com', 'maxcdn.bootstrapcdn.com')
    CSP_IMG_SRC = ("'self'",)
    CSP_DEFAULT_SRC = ("'self'", 'http://localhost')
    #CSP_REPORT_URI = 'csp_report.json'
    CSP_OBJECT_SRC = ("'none'",)
    CSP_BASE_URI = ("'none'",)
    CSP_FRAME_SRC = CSP_SCRIPT_SRC
    #CSP_CONNECT_SRC for ajax calls or websockets
ROOT_URLCONF = 'writerprj.urls'

LOGIN_URL = '/login/'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'writerprj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_cdn")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    #'/var/www/static/',
]

MEDIA_URL = '/media_cdn/'
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media_cdn")

LOGOUT_REDIRECT_URL = '/login/'
LOGIN_REDIRECT_URL = '/'

# Crispy form tags settings:
CRISPY_TEMPLATE_PACK = 'bootstrap3'

